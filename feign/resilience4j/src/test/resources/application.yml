spring:
  application:
    name: resilience4j
  cloud:
    circuitbreaker:
      resilience4j:
        enabled: true
server:
  port: 7002
  servlet:
    context-path: /resilience4j

#health：http://localhost:7001/feign-client/actuator/health
#info：http://localhost:7001/feign-client/actuator/info    
management:
  endpoints:
    web:
      exposure:
        include: '*'
feign:
  client:
    config:
      default:
        readTimeout: 1000
        connectTimeout: 1000
  circuitbreaker:
    enabled: true
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10	#配置滑动窗⼝的⼤⼩。
        minimumNumberOfCalls: 5	#断路器计算失败率或慢调⽤率之前所需的最⼩调⽤数（每个滑动窗⼝周期）。例如，如果minimumNumberOfCalls为10，则必须⾄少记录10个调⽤，然后才能计算失败率。如果只记录了9次调⽤，即使所有9次调⽤都失败，断路器也不会开启。
        permittedNumberOfCallsInHalfOpenState: 3	#断路器在半开状态下允许通过的调⽤次数。
        automaticTransitionFromOpenToHalfOpenEnabled: true #不开启监视线程
        waitDurationInOpenState: 5s	#断路器从开启过渡到半开应等待的时间。
        failureRateThreshold: 50	#以百分⽐配置失败率阈值。当失败率等于或⼤于阈值时，断路器状态并关闭变为开启，并进⾏服务降级。
        eventConsumerBufferSize: 10
    instances:
      backendA:
        baseConfig: default
  timelimiter:
    configs:
      default:
        timeoutDuration: 3000	#超时时间
    instances:
      backendA:
        baseConfig: default
  retry:
    configs:
      default:
        maxAttempts: 3     #总尝试次数
        waitDuration: 10s    #重试间隔时间
        enableExponentialBackoff: false    # 是否允许使用指数退避算法进行重试间隔时间的计算
        exponentialBackoffMultiplier: 2     # 指数退避算法的乘数
        enableRandomizedWait: false       # 是否允许使用随机的重试间隔
        randomizedWaitFactor: 0.5         # 随机因子
        retryExceptions:
          - java.lang.Exception
          #- org.springframework.web.client.HttpServerErrorException
          #- java.util.concurrent.TimeoutException
          #- java.io.IOException
        #ignoreExceptions:
          #- io.github.robwin.exception.BusinessException
    instances:
      backendA:
        baseConfig: default
        waitDuration: 1 #1毫秒，最小等待时间为1毫秒